// Auto-generated. Do not edit!

// (in-package tutorial_skill.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;
let common_msgs = _finder('common_msgs');

//-----------------------------------------------------------

class TutorialFeedback {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.app_status = null;
      this.percentage_completed = null;
      this.engagement = null;
      this.response_params = null;
    }
    else {
      if (initObj.hasOwnProperty('app_status')) {
        this.app_status = initObj.app_status
      }
      else {
        this.app_status = '';
      }
      if (initObj.hasOwnProperty('percentage_completed')) {
        this.percentage_completed = initObj.percentage_completed
      }
      else {
        this.percentage_completed = 0;
      }
      if (initObj.hasOwnProperty('engagement')) {
        this.engagement = initObj.engagement
      }
      else {
        this.engagement = false;
      }
      if (initObj.hasOwnProperty('response_params')) {
        this.response_params = initObj.response_params
      }
      else {
        this.response_params = [];
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type TutorialFeedback
    // Serialize message field [app_status]
    bufferOffset = _serializer.string(obj.app_status, buffer, bufferOffset);
    // Serialize message field [percentage_completed]
    bufferOffset = _serializer.uint8(obj.percentage_completed, buffer, bufferOffset);
    // Serialize message field [engagement]
    bufferOffset = _serializer.bool(obj.engagement, buffer, bufferOffset);
    // Serialize message field [response_params]
    // Serialize the length for message field [response_params]
    bufferOffset = _serializer.uint32(obj.response_params.length, buffer, bufferOffset);
    obj.response_params.forEach((val) => {
      bufferOffset = common_msgs.msg.KeyValuePair.serialize(val, buffer, bufferOffset);
    });
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type TutorialFeedback
    let len;
    let data = new TutorialFeedback(null);
    // Deserialize message field [app_status]
    data.app_status = _deserializer.string(buffer, bufferOffset);
    // Deserialize message field [percentage_completed]
    data.percentage_completed = _deserializer.uint8(buffer, bufferOffset);
    // Deserialize message field [engagement]
    data.engagement = _deserializer.bool(buffer, bufferOffset);
    // Deserialize message field [response_params]
    // Deserialize array length for message field [response_params]
    len = _deserializer.uint32(buffer, bufferOffset);
    data.response_params = new Array(len);
    for (let i = 0; i < len; ++i) {
      data.response_params[i] = common_msgs.msg.KeyValuePair.deserialize(buffer, bufferOffset)
    }
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += object.app_status.length;
    object.response_params.forEach((val) => {
      length += common_msgs.msg.KeyValuePair.getMessageSize(val);
    });
    return length + 10;
  }

  static datatype() {
    // Returns string type for a message object
    return 'tutorial_skill/TutorialFeedback';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'dd2a3b825f95b7d9c1ba587b6f0eb46f';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    string app_status
    uint8 percentage_completed
    bool engagement
    common_msgs/KeyValuePair[] response_params
    
    
    ================================================================================
    MSG: common_msgs/KeyValuePair
    #use standard header
    #Header header
    
    #string values for key and its value
    string key
    string value
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new TutorialFeedback(null);
    if (msg.app_status !== undefined) {
      resolved.app_status = msg.app_status;
    }
    else {
      resolved.app_status = ''
    }

    if (msg.percentage_completed !== undefined) {
      resolved.percentage_completed = msg.percentage_completed;
    }
    else {
      resolved.percentage_completed = 0
    }

    if (msg.engagement !== undefined) {
      resolved.engagement = msg.engagement;
    }
    else {
      resolved.engagement = false
    }

    if (msg.response_params !== undefined) {
      resolved.response_params = new Array(msg.response_params.length);
      for (let i = 0; i < resolved.response_params.length; ++i) {
        resolved.response_params[i] = common_msgs.msg.KeyValuePair.Resolve(msg.response_params[i]);
      }
    }
    else {
      resolved.response_params = []
    }

    return resolved;
    }
};

module.exports = TutorialFeedback;
