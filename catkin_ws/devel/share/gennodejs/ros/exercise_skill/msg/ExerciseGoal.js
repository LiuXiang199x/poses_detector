// Auto-generated. Do not edit!

// (in-package exercise_skill.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class ExerciseGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.skill_command = null;
      this.max_time = null;
      this.number_plays = null;
      this.proactivity = null;
      this.skill_status = null;
    }
    else {
      if (initObj.hasOwnProperty('skill_command')) {
        this.skill_command = initObj.skill_command
      }
      else {
        this.skill_command = '';
      }
      if (initObj.hasOwnProperty('max_time')) {
        this.max_time = initObj.max_time
      }
      else {
        this.max_time = 0;
      }
      if (initObj.hasOwnProperty('number_plays')) {
        this.number_plays = initObj.number_plays
      }
      else {
        this.number_plays = 0;
      }
      if (initObj.hasOwnProperty('proactivity')) {
        this.proactivity = initObj.proactivity
      }
      else {
        this.proactivity = 0;
      }
      if (initObj.hasOwnProperty('skill_status')) {
        this.skill_status = initObj.skill_status
      }
      else {
        this.skill_status = '';
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type ExerciseGoal
    // Serialize message field [skill_command]
    bufferOffset = _serializer.string(obj.skill_command, buffer, bufferOffset);
    // Serialize message field [max_time]
    bufferOffset = _serializer.uint16(obj.max_time, buffer, bufferOffset);
    // Serialize message field [number_plays]
    bufferOffset = _serializer.uint16(obj.number_plays, buffer, bufferOffset);
    // Serialize message field [proactivity]
    bufferOffset = _serializer.uint16(obj.proactivity, buffer, bufferOffset);
    // Serialize message field [skill_status]
    bufferOffset = _serializer.string(obj.skill_status, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type ExerciseGoal
    let len;
    let data = new ExerciseGoal(null);
    // Deserialize message field [skill_command]
    data.skill_command = _deserializer.string(buffer, bufferOffset);
    // Deserialize message field [max_time]
    data.max_time = _deserializer.uint16(buffer, bufferOffset);
    // Deserialize message field [number_plays]
    data.number_plays = _deserializer.uint16(buffer, bufferOffset);
    // Deserialize message field [proactivity]
    data.proactivity = _deserializer.uint16(buffer, bufferOffset);
    // Deserialize message field [skill_status]
    data.skill_status = _deserializer.string(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += object.skill_command.length;
    length += object.skill_status.length;
    return length + 14;
  }

  static datatype() {
    // Returns string type for a message object
    return 'exercise_skill/ExerciseGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '483e449faa3be5acb144b338632da130';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    string skill_command
    uint16 max_time
    uint16 number_plays
    uint16 proactivity
    string skill_status
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new ExerciseGoal(null);
    if (msg.skill_command !== undefined) {
      resolved.skill_command = msg.skill_command;
    }
    else {
      resolved.skill_command = ''
    }

    if (msg.max_time !== undefined) {
      resolved.max_time = msg.max_time;
    }
    else {
      resolved.max_time = 0
    }

    if (msg.number_plays !== undefined) {
      resolved.number_plays = msg.number_plays;
    }
    else {
      resolved.number_plays = 0
    }

    if (msg.proactivity !== undefined) {
      resolved.proactivity = msg.proactivity;
    }
    else {
      resolved.proactivity = 0
    }

    if (msg.skill_status !== undefined) {
      resolved.skill_status = msg.skill_status;
    }
    else {
      resolved.skill_status = ''
    }

    return resolved;
    }
};

module.exports = ExerciseGoal;
