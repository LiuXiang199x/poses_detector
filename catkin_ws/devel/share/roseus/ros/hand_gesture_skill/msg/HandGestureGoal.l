;; Auto-generated. Do not edit!


(when (boundp 'hand_gesture_skill::HandGestureGoal)
  (if (not (find-package "HAND_GESTURE_SKILL"))
    (make-package "HAND_GESTURE_SKILL"))
  (shadow 'HandGestureGoal (find-package "HAND_GESTURE_SKILL")))
(unless (find-package "HAND_GESTURE_SKILL::HANDGESTUREGOAL")
  (make-package "HAND_GESTURE_SKILL::HANDGESTUREGOAL"))

(in-package "ROS")
;;//! \htmlinclude HandGestureGoal.msg.html


(defclass hand_gesture_skill::HandGestureGoal
  :super ros::object
  :slots (_num_minigame ))

(defmethod hand_gesture_skill::HandGestureGoal
  (:init
   (&key
    ((:num_minigame __num_minigame) "")
    )
   (send-super :init)
   (setq _num_minigame (string __num_minigame))
   self)
  (:num_minigame
   (&optional __num_minigame)
   (if __num_minigame (setq _num_minigame __num_minigame)) _num_minigame)
  (:serialization-length
   ()
   (+
    ;; string _num_minigame
    4 (length _num_minigame)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _num_minigame
       (write-long (length _num_minigame) s) (princ _num_minigame s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _num_minigame
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _num_minigame (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get hand_gesture_skill::HandGestureGoal :md5sum-) "6eb5059f69bb8d585283424a293f9480")
(setf (get hand_gesture_skill::HandGestureGoal :datatype-) "hand_gesture_skill/HandGestureGoal")
(setf (get hand_gesture_skill::HandGestureGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
string num_minigame

")



(provide :hand_gesture_skill/HandGestureGoal "6eb5059f69bb8d585283424a293f9480")


