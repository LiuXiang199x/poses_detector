;; Auto-generated. Do not edit!


(when (boundp 'hand_gesture_skill::HandGestureFeedback)
  (if (not (find-package "HAND_GESTURE_SKILL"))
    (make-package "HAND_GESTURE_SKILL"))
  (shadow 'HandGestureFeedback (find-package "HAND_GESTURE_SKILL")))
(unless (find-package "HAND_GESTURE_SKILL::HANDGESTUREFEEDBACK")
  (make-package "HAND_GESTURE_SKILL::HANDGESTUREFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude HandGestureFeedback.msg.html


(defclass hand_gesture_skill::HandGestureFeedback
  :super ros::object
  :slots (_questions_completed ))

(defmethod hand_gesture_skill::HandGestureFeedback
  (:init
   (&key
    ((:questions_completed __questions_completed) 0)
    )
   (send-super :init)
   (setq _questions_completed (round __questions_completed))
   self)
  (:questions_completed
   (&optional __questions_completed)
   (if __questions_completed (setq _questions_completed __questions_completed)) _questions_completed)
  (:serialization-length
   ()
   (+
    ;; int32 _questions_completed
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _questions_completed
       (write-long _questions_completed s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _questions_completed
     (setq _questions_completed (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get hand_gesture_skill::HandGestureFeedback :md5sum-) "c759c794305866da6e45b34ea3a27ff4")
(setf (get hand_gesture_skill::HandGestureFeedback :datatype-) "hand_gesture_skill/HandGestureFeedback")
(setf (get hand_gesture_skill::HandGestureFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define a feedback message
int32 questions_completed

")



(provide :hand_gesture_skill/HandGestureFeedback "c759c794305866da6e45b34ea3a27ff4")


