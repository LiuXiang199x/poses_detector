;; Auto-generated. Do not edit!


(when (boundp 'tutorial_skill::TutorialFeedback)
  (if (not (find-package "TUTORIAL_SKILL"))
    (make-package "TUTORIAL_SKILL"))
  (shadow 'TutorialFeedback (find-package "TUTORIAL_SKILL")))
(unless (find-package "TUTORIAL_SKILL::TUTORIALFEEDBACK")
  (make-package "TUTORIAL_SKILL::TUTORIALFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude TutorialFeedback.msg.html
(if (not (find-package "COMMON_MSGS"))
  (ros::roseus-add-msgs "common_msgs"))


(defclass tutorial_skill::TutorialFeedback
  :super ros::object
  :slots (_app_status _percentage_completed _engagement _response_params ))

(defmethod tutorial_skill::TutorialFeedback
  (:init
   (&key
    ((:app_status __app_status) "")
    ((:percentage_completed __percentage_completed) 0)
    ((:engagement __engagement) nil)
    ((:response_params __response_params) (let (r) (dotimes (i 0) (push (instance common_msgs::KeyValuePair :init) r)) r))
    )
   (send-super :init)
   (setq _app_status (string __app_status))
   (setq _percentage_completed (round __percentage_completed))
   (setq _engagement __engagement)
   (setq _response_params __response_params)
   self)
  (:app_status
   (&optional __app_status)
   (if __app_status (setq _app_status __app_status)) _app_status)
  (:percentage_completed
   (&optional __percentage_completed)
   (if __percentage_completed (setq _percentage_completed __percentage_completed)) _percentage_completed)
  (:engagement
   (&optional __engagement)
   (if __engagement (setq _engagement __engagement)) _engagement)
  (:response_params
   (&rest __response_params)
   (if (keywordp (car __response_params))
       (send* _response_params __response_params)
     (progn
       (if __response_params (setq _response_params (car __response_params)))
       _response_params)))
  (:serialization-length
   ()
   (+
    ;; string _app_status
    4 (length _app_status)
    ;; uint8 _percentage_completed
    1
    ;; bool _engagement
    1
    ;; common_msgs/KeyValuePair[] _response_params
    (apply #'+ (send-all _response_params :serialization-length)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _app_status
       (write-long (length _app_status) s) (princ _app_status s)
     ;; uint8 _percentage_completed
       (write-byte _percentage_completed s)
     ;; bool _engagement
       (if _engagement (write-byte -1 s) (write-byte 0 s))
     ;; common_msgs/KeyValuePair[] _response_params
     (write-long (length _response_params) s)
     (dolist (elem _response_params)
       (send elem :serialize s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _app_status
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _app_status (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; uint8 _percentage_completed
     (setq _percentage_completed (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;; bool _engagement
     (setq _engagement (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; common_msgs/KeyValuePair[] _response_params
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _response_params (let (r) (dotimes (i n) (push (instance common_msgs::KeyValuePair :init) r)) r))
     (dolist (elem- _response_params)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;;
   self)
  )

(setf (get tutorial_skill::TutorialFeedback :md5sum-) "dd2a3b825f95b7d9c1ba587b6f0eb46f")
(setf (get tutorial_skill::TutorialFeedback :datatype-) "tutorial_skill/TutorialFeedback")
(setf (get tutorial_skill::TutorialFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
string app_status
uint8 percentage_completed
bool engagement
common_msgs/KeyValuePair[] response_params


================================================================================
MSG: common_msgs/KeyValuePair
#use standard header
#Header header

#string values for key and its value
string key
string value

")



(provide :tutorial_skill/TutorialFeedback "dd2a3b825f95b7d9c1ba587b6f0eb46f")


