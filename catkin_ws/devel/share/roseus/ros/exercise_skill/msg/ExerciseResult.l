;; Auto-generated. Do not edit!


(when (boundp 'exercise_skill::ExerciseResult)
  (if (not (find-package "EXERCISE_SKILL"))
    (make-package "EXERCISE_SKILL"))
  (shadow 'ExerciseResult (find-package "EXERCISE_SKILL")))
(unless (find-package "EXERCISE_SKILL::EXERCISERESULT")
  (make-package "EXERCISE_SKILL::EXERCISERESULT"))

(in-package "ROS")
;;//! \htmlinclude ExerciseResult.msg.html


(intern "*ERROR*" (find-package "EXERCISE_SKILL::EXERCISERESULT"))
(shadow '*ERROR* (find-package "EXERCISE_SKILL::EXERCISERESULT"))
(defconstant exercise_skill::ExerciseResult::*ERROR* -1)
(intern "*SUCCESS*" (find-package "EXERCISE_SKILL::EXERCISERESULT"))
(shadow '*SUCCESS* (find-package "EXERCISE_SKILL::EXERCISERESULT"))
(defconstant exercise_skill::ExerciseResult::*SUCCESS* 0)
(intern "*FAIL*" (find-package "EXERCISE_SKILL::EXERCISERESULT"))
(shadow '*FAIL* (find-package "EXERCISE_SKILL::EXERCISERESULT"))
(defconstant exercise_skill::ExerciseResult::*FAIL* 1)
(defclass exercise_skill::ExerciseResult
  :super ros::object
  :slots (_skill_result ))

(defmethod exercise_skill::ExerciseResult
  (:init
   (&key
    ((:skill_result __skill_result) 0)
    )
   (send-super :init)
   (setq _skill_result (round __skill_result))
   self)
  (:skill_result
   (&optional __skill_result)
   (if __skill_result (setq _skill_result __skill_result)) _skill_result)
  (:serialization-length
   ()
   (+
    ;; int8 _skill_result
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int8 _skill_result
       (write-byte _skill_result s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int8 _skill_result
     (setq _skill_result (sys::peek buf ptr- :char)) (incf ptr- 1)
     (if (> _skill_result 127) (setq _skill_result (- _skill_result 256)))
   ;;
   self)
  )

(setf (get exercise_skill::ExerciseResult :md5sum-) "4e5dc85de4836ff949b7a939d7ae0b33")
(setf (get exercise_skill::ExerciseResult :datatype-) "exercise_skill/ExerciseResult")
(setf (get exercise_skill::ExerciseResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
int8 ERROR = -1
int8 SUCCESS = 0
int8 FAIL = 1
int8 skill_result

")



(provide :exercise_skill/ExerciseResult "4e5dc85de4836ff949b7a939d7ae0b33")


