;; Auto-generated. Do not edit!


(when (boundp 'exercise_skill::ExerciseGoal)
  (if (not (find-package "EXERCISE_SKILL"))
    (make-package "EXERCISE_SKILL"))
  (shadow 'ExerciseGoal (find-package "EXERCISE_SKILL")))
(unless (find-package "EXERCISE_SKILL::EXERCISEGOAL")
  (make-package "EXERCISE_SKILL::EXERCISEGOAL"))

(in-package "ROS")
;;//! \htmlinclude ExerciseGoal.msg.html


(defclass exercise_skill::ExerciseGoal
  :super ros::object
  :slots (_skill_command _max_time _number_plays _proactivity _skill_status ))

(defmethod exercise_skill::ExerciseGoal
  (:init
   (&key
    ((:skill_command __skill_command) "")
    ((:max_time __max_time) 0)
    ((:number_plays __number_plays) 0)
    ((:proactivity __proactivity) 0)
    ((:skill_status __skill_status) "")
    )
   (send-super :init)
   (setq _skill_command (string __skill_command))
   (setq _max_time (round __max_time))
   (setq _number_plays (round __number_plays))
   (setq _proactivity (round __proactivity))
   (setq _skill_status (string __skill_status))
   self)
  (:skill_command
   (&optional __skill_command)
   (if __skill_command (setq _skill_command __skill_command)) _skill_command)
  (:max_time
   (&optional __max_time)
   (if __max_time (setq _max_time __max_time)) _max_time)
  (:number_plays
   (&optional __number_plays)
   (if __number_plays (setq _number_plays __number_plays)) _number_plays)
  (:proactivity
   (&optional __proactivity)
   (if __proactivity (setq _proactivity __proactivity)) _proactivity)
  (:skill_status
   (&optional __skill_status)
   (if __skill_status (setq _skill_status __skill_status)) _skill_status)
  (:serialization-length
   ()
   (+
    ;; string _skill_command
    4 (length _skill_command)
    ;; uint16 _max_time
    2
    ;; uint16 _number_plays
    2
    ;; uint16 _proactivity
    2
    ;; string _skill_status
    4 (length _skill_status)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _skill_command
       (write-long (length _skill_command) s) (princ _skill_command s)
     ;; uint16 _max_time
       (write-word _max_time s)
     ;; uint16 _number_plays
       (write-word _number_plays s)
     ;; uint16 _proactivity
       (write-word _proactivity s)
     ;; string _skill_status
       (write-long (length _skill_status) s) (princ _skill_status s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _skill_command
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _skill_command (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; uint16 _max_time
     (setq _max_time (sys::peek buf ptr- :short)) (incf ptr- 2)
   ;; uint16 _number_plays
     (setq _number_plays (sys::peek buf ptr- :short)) (incf ptr- 2)
   ;; uint16 _proactivity
     (setq _proactivity (sys::peek buf ptr- :short)) (incf ptr- 2)
   ;; string _skill_status
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _skill_status (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get exercise_skill::ExerciseGoal :md5sum-) "483e449faa3be5acb144b338632da130")
(setf (get exercise_skill::ExerciseGoal :datatype-) "exercise_skill/ExerciseGoal")
(setf (get exercise_skill::ExerciseGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
string skill_command
uint16 max_time
uint16 number_plays
uint16 proactivity
string skill_status

")



(provide :exercise_skill/ExerciseGoal "483e449faa3be5acb144b338632da130")


